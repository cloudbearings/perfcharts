#!/bin/bash

# show usage of the script
show_usage() {
	local base_name=`basename $0`
	echo 'Performance Test Report Generator - Chart Generation Tool'
	echo "Usage: $base_name [OPTION...] [INPUT DIRECTORY]"
	echo 'Examples:'
	echo "	$base_name	# Generate a report from current directory"
	echo "	$base_name -z CST	# Generate a report from current directory with specifying the timezone of China Standard Time (CST)"
	echo "	$base_name input/	# Generate a report from directory 'input/'"
	echo "	$base_name -d output/ -o report.html input/	# Generate report 'report.html' from 'input/', and place generated files into 'output/'"
	echo
	echo 'Options:'
	echo '	-d DIRECTORY		specify the output directory'
	echo "	-o FILE		the file name of generated report, default to 'report.html'"
	echo '	-z TIMEZONE		specify the timezone. For example, UTC+8'
}

# initialize global variables
if ! [ -n "$CGT_HOME" ]; then export CGT_HOME=$(cd `dirname $0`; cd ..; pwd); fi
if ! [ -n "$CGT_LIB" ]; then export CGT_LIB=$CGT_HOME/lib; fi
if ! [ -n "$CGT_JAVA_COMMAND" ]; then export CGT_JAVA_COMMAND=java; fi
input_dir=\.
# deal with arguments
while getopts d:o:z:? opt; do
	case $opt in
	d) 
		output_dir=$OPTARG;;
	o) 
		report_file=$OPTARG;;
	z)
		timezone=$OPTARG;;
	?|*)	echo
		show_usage
		exit -1;;
	esac
done
shift $[$OPTIND - 1]
if [ -n "$1" ]; then
	input_dir=$1
fi

if ! [ -n "$output_dir" ]; then output_dir=$input_dir/output; fi
if ! [ -n "$report_file" ]; then report_file=$output_dir/report.html; fi

tmp_dir=$output_dir/tmp
perftest_parser=$CGT_LIB/chartgeneration-perftest-parser.jar
perftest_generator=$CGT_LIB/chartgeneration-core.jar
jmeter_default_config_file=$CGT_HOME/res/jmeter.conf
rm_default_config_file=$CGT_HOME/res/res.template.conf
report_template=$CGT_HOME/res/report_mono.html

jmeter_dir=$tmp_dir/jmeter
jmeter_data_table=$jmeter_dir/jmeter.csv
resource_monitoring_dir=$tmp_dir/resource_monitoring
json_dir=$tmp_dir/subreports
jmeter_json_file=$json_dir/Jmeter.json

# parse raw data to data tables
rm "$tmp_dir" -Rf
for file in $input_dir/*; do
if [ -f "$file" ]; then
	file_base_name=`basename $file`
	file_extension=${file_base_name##*.}
	file_bare_name=${file_base_name%%.*}
	#echo ext of $file_base_name is $file_extension
	case $file_extension in
	load|nmon)
		server_name=${file_bare_name%%_*}
		mkdir -p "$resource_monitoring_dir"
		if [ "$file_extension" == "load" ]; then
			parser_class=CPULoadParser
		elif [ "$file_extension" == "nmon" ]; then
			parser_class=NMONParser
		fi
		if ! $CGT_JAVA_COMMAND -jar "$perftest_parser" "$parser_class" "$timezone" < "$file" >> "$resource_monitoring_dir/$server_name.csv"; then
			exit 1
		fi
		;;
	jtl)
		mkdir -p "$jmeter_dir"
		parser_class=JmeterParser
		if ! $CGT_JAVA_COMMAND -jar "$perftest_parser" "$parser_class" "$timezone" < "$file" >> "$jmeter_data_table"; then
			exit 1
		fi
		;;
	conf) ;;
	*) echo "[Warning] The file'$file' is ignored, because I don't know what it is.";;
	esac
fi
done

# generate charts
mkdir -p "$json_dir"
# generate charts from Jmeter
if [ -f "$jmeter_data_table" ]; then
	if [ -f "$input_dir/jmeter.conf" ]; then
		cp "$input_dir/jmeter.conf" "$jmeter_dir/jmeter.conf"
	else
		cp "$jmeter_default_config_file" "$jmeter_dir/jmeter.conf"
	fi
	$CGT_JAVA_COMMAND -jar "$perftest_generator" "$jmeter_dir/jmeter.conf" < "$jmeter_data_table" > "$jmeter_json_file"
fi

# generate system resource monitoring charts
for res_data_table in $resource_monitoring_dir/*.csv; do
if [ -f "$res_data_table" ]; then
	file_base_name=`basename $res_data_table`
	file_bare_name=${file_base_name%%.*}
	server_name=${file_bare_name%%_*}
	unset config_file_template
	if [ -f "$input_dir/$server_name.conf" ]; then
		config_file_template=$input_dir/$server_name.conf
	elif [ -f "$input_dir/res.template.conf" ]; then
		config_file_template=$input_dir/res.template.conf
	else
		config_file_template=$rm_default_config_file
	fi
	sed "s/<!--{server_name}-->/${server_name}/g" "$config_file_template" > "$resource_monitoring_dir/$server_name.conf"
	$CGT_JAVA_COMMAND -jar "$perftest_generator" "$resource_monitoring_dir/$server_name.conf" < "$res_data_table" > "$json_dir/Resource-$server_name.json"
fi
done

# generate final report
js_file=$tmp_dir/data.js
echo '(function(){var d=ChartGeneration.data,j;' > "$js_file"
for json_file in $json_dir/*.json; do
if [ -f "$json_file" ]; then
	file_base_name=`basename $json_file`
	file_bare_name=${file_base_name%%.*}
	echo -n 'j=' >> "$js_file"
	cat "$json_file" >> "$js_file"
	echo ";if(!j.title)j.title='$file_bare_name';d.push(j);" >> "$js_file"
fi
done
echo '})();' >> "$js_file"

cp "$report_template" "$report_file" -f
echo '<script type="text/javascript">' >> "$report_file"
cat $js_file >> "$report_file"
echo '</script>' >> "$report_file"


